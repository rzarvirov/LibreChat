{"code":"import { __awaiter, __generator, __rest } from \"tslib\";\nimport * as endpoints from './api-endpoints';\nimport * as config from './config';\nimport request from './request';\nimport * as s from './schemas';\nexport function abortRequestWithMessage(endpoint, abortKey, message) {\n    return request.post(endpoints.abortRequest(endpoint), { arg: { abortKey: abortKey, message: message } });\n}\nexport function revokeUserKey(name) {\n    return request.delete(endpoints.revokeUserKey(name));\n}\nexport function revokeAllUserKeys() {\n    return request.delete(endpoints.revokeAllUserKeys());\n}\nexport function deleteUser() {\n    return request.delete(endpoints.deleteUser());\n}\nexport function getMessagesByConvoId(conversationId) {\n    if (conversationId === 'new') {\n        return Promise.resolve([]);\n    }\n    return request.get(endpoints.messages(conversationId));\n}\nexport function getSharedMessages(shareId) {\n    return request.get(endpoints.shareMessages(shareId));\n}\nexport var listSharedLinks = function (params) { return __awaiter(void 0, void 0, void 0, function () {\n    var pageSize, isPublic, sortBy, sortDirection, search, cursor;\n    return __generator(this, function (_a) {\n        pageSize = params.pageSize, isPublic = params.isPublic, sortBy = params.sortBy, sortDirection = params.sortDirection, search = params.search, cursor = params.cursor;\n        return [2 /*return*/, request.get(endpoints.getSharedLinks(pageSize, isPublic, sortBy, sortDirection, search, cursor))];\n    });\n}); };\nexport function getSharedLink(conversationId) {\n    return request.get(endpoints.getSharedLink(conversationId));\n}\nexport function createSharedLink(conversationId) {\n    return request.post(endpoints.createSharedLink(conversationId));\n}\nexport function updateSharedLink(shareId) {\n    return request.patch(endpoints.updateSharedLink(shareId));\n}\nexport function deleteSharedLink(shareId) {\n    return request.delete(endpoints.shareMessages(shareId));\n}\nexport function updateMessage(payload) {\n    var conversationId = payload.conversationId, messageId = payload.messageId, text = payload.text;\n    if (!conversationId) {\n        throw new Error('conversationId is required');\n    }\n    return request.put(endpoints.messages(conversationId, messageId), { text: text });\n}\nexport function updateMessageContent(payload) {\n    var conversationId = payload.conversationId, messageId = payload.messageId, index = payload.index, text = payload.text;\n    if (!conversationId) {\n        throw new Error('conversationId is required');\n    }\n    return request.put(endpoints.messages(conversationId, messageId), { text: text, index: index });\n}\nexport function updateUserKey(payload) {\n    var value = payload.value;\n    if (!value) {\n        throw new Error('value is required');\n    }\n    return request.put(endpoints.keys(), payload);\n}\nexport function getPresets() {\n    return request.get(endpoints.presets());\n}\nexport function createPreset(payload) {\n    return request.post(endpoints.presets(), payload);\n}\nexport function updatePreset(payload) {\n    return request.post(endpoints.presets(), payload);\n}\nexport function deletePreset(arg) {\n    return request.post(endpoints.deletePreset(), arg);\n}\nexport function getSearchEnabled() {\n    return request.get(endpoints.searchEnabled());\n}\nexport function getUser() {\n    return request.get(endpoints.user());\n}\nexport function getUserBalance() {\n    return request.get(endpoints.balance());\n}\nexport var updateTokenCount = function (text) {\n    return request.post(endpoints.tokenizer(), { arg: text });\n};\nexport var login = function (payload) {\n    return request.post(endpoints.login(), payload);\n};\nexport var logout = function () {\n    return request.post(endpoints.logout());\n};\nexport var register = function (payload) {\n    return request.post(endpoints.register(), payload);\n};\nexport var userKeyQuery = function (name) {\n    return request.get(endpoints.userKeyQuery(name));\n};\nexport var getLoginGoogle = function () {\n    return request.get(endpoints.loginGoogle());\n};\nexport var requestPasswordReset = function (payload) {\n    return request.post(endpoints.requestPasswordReset(), payload);\n};\nexport var resetPassword = function (payload) {\n    return request.post(endpoints.resetPassword(), payload);\n};\nexport var verifyEmail = function (payload) {\n    return request.post(endpoints.verifyEmail(), payload);\n};\nexport var resendVerificationEmail = function (payload) {\n    return request.post(endpoints.resendVerificationEmail(), payload);\n};\nexport var getAvailablePlugins = function () {\n    return request.get(endpoints.plugins());\n};\nexport var updateUserPlugins = function (payload) {\n    return request.post(endpoints.userPlugins(), payload);\n};\n/* Config */\nexport var getStartupConfig = function () {\n    return request.get(endpoints.config());\n};\nexport var getAIEndpoints = function () {\n    return request.get(endpoints.aiEndpoints());\n};\nexport var getModels = function () { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2 /*return*/, request.get(endpoints.models())];\n    });\n}); };\nexport var getEndpointsConfigOverride = function () {\n    return request.get(endpoints.endpointsConfigOverride());\n};\n/* Assistants */\nexport var createAssistant = function (_a) {\n    var version = _a.version, data = __rest(_a, [\"version\"]);\n    return request.post(endpoints.assistants({ version: version }), data);\n};\nexport var getAssistantById = function (_a) {\n    var endpoint = _a.endpoint, assistant_id = _a.assistant_id, version = _a.version;\n    return request.get(endpoints.assistants({\n        path: assistant_id,\n        endpoint: endpoint,\n        version: version,\n    }));\n};\nexport var updateAssistant = function (_a) {\n    var assistant_id = _a.assistant_id, data = _a.data, version = _a.version;\n    return request.patch(endpoints.assistants({\n        path: assistant_id,\n        version: version,\n    }), data);\n};\nexport var deleteAssistant = function (_a) {\n    var assistant_id = _a.assistant_id, model = _a.model, endpoint = _a.endpoint, version = _a.version;\n    return request.delete(endpoints.assistants({\n        path: assistant_id,\n        options: { model: model, endpoint: endpoint },\n        version: version,\n    }));\n};\nexport var listAssistants = function (params, version) {\n    return request.get(endpoints.assistants({\n        version: version,\n        options: params,\n    }));\n};\nexport function getAssistantDocs(_a) {\n    var endpoint = _a.endpoint, version = _a.version;\n    if (!s.isAssistantsEndpoint(endpoint)) {\n        return Promise.resolve([]);\n    }\n    return request.get(endpoints.assistants({\n        path: 'documents',\n        version: version,\n        options: { endpoint: endpoint },\n        endpoint: endpoint,\n    }));\n}\n/* Tools */\nexport var getAvailableTools = function (_endpoint, version) {\n    var path = '';\n    if (s.isAssistantsEndpoint(_endpoint)) {\n        var endpoint = _endpoint;\n        path = endpoints.assistants({\n            path: 'tools',\n            endpoint: endpoint,\n            version: version !== null && version !== void 0 ? version : config.defaultAssistantsVersion[endpoint],\n        });\n    }\n    else {\n        path = endpoints.agents({\n            path: 'tools',\n        });\n    }\n    return request.get(path);\n};\nexport var getVerifyAgentToolAuth = function (params) {\n    return request.get(endpoints.agents({\n        path: \"tools/\".concat(params.toolId, \"/auth\"),\n    }));\n};\nexport var callTool = function (_a) {\n    var toolId = _a.toolId, toolParams = _a.toolParams;\n    return request.post(endpoints.agents({\n        path: \"tools/\".concat(toolId, \"/call\"),\n    }), toolParams);\n};\nexport var getToolCalls = function (params) {\n    return request.get(endpoints.agents({\n        path: 'tools/calls',\n        options: params,\n    }));\n};\n/* Files */\nexport var getFiles = function () {\n    return request.get(endpoints.files());\n};\nexport var getFileConfig = function () {\n    return request.get(\"\".concat(endpoints.files(), \"/config\"));\n};\nexport var uploadImage = function (data, signal) {\n    var requestConfig = signal ? { signal: signal } : undefined;\n    return request.postMultiPart(endpoints.images(), data, requestConfig);\n};\nexport var uploadFile = function (data, signal) {\n    var requestConfig = signal ? { signal: signal } : undefined;\n    return request.postMultiPart(endpoints.files(), data, requestConfig);\n};\n/* actions */\nexport var updateAction = function (data) {\n    var assistant_id = data.assistant_id, version = data.version, body = __rest(data, [\"assistant_id\", \"version\"]);\n    return request.post(endpoints.assistants({\n        path: \"actions/\".concat(assistant_id),\n        version: version,\n    }), body);\n};\nexport function getActions() {\n    return request.get(endpoints.agents({\n        path: 'actions',\n    }));\n}\nexport var deleteAction = function (_a) {\n    var assistant_id = _a.assistant_id, action_id = _a.action_id, model = _a.model, version = _a.version, endpoint = _a.endpoint;\n    return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_b) {\n            return [2 /*return*/, request.delete(endpoints.assistants({\n                    path: \"actions/\".concat(assistant_id, \"/\").concat(action_id, \"/\").concat(model),\n                    version: version,\n                    endpoint: endpoint,\n                }))];\n        });\n    });\n};\n/**\n * Agents\n */\nexport var createAgent = function (_a) {\n    var data = __rest(_a, []);\n    return request.post(endpoints.agents({}), data);\n};\nexport var getAgentById = function (_a) {\n    var agent_id = _a.agent_id;\n    return request.get(endpoints.agents({\n        path: agent_id,\n    }));\n};\nexport var updateAgent = function (_a) {\n    var agent_id = _a.agent_id, data = _a.data;\n    return request.patch(endpoints.agents({\n        path: agent_id,\n    }), data);\n};\nexport var duplicateAgent = function (_a) {\n    var agent_id = _a.agent_id;\n    return request.post(endpoints.agents({\n        path: \"\".concat(agent_id, \"/duplicate\"),\n    }));\n};\nexport var deleteAgent = function (_a) {\n    var agent_id = _a.agent_id;\n    return request.delete(endpoints.agents({\n        path: agent_id,\n    }));\n};\nexport var listAgents = function (params) {\n    return request.get(endpoints.agents({\n        options: params,\n    }));\n};\n/* Tools */\nexport var getAvailableAgentTools = function () {\n    return request.get(endpoints.agents({\n        path: 'tools',\n    }));\n};\n/* Actions */\nexport var updateAgentAction = function (data) {\n    var agent_id = data.agent_id, body = __rest(data, [\"agent_id\"]);\n    return request.post(endpoints.agents({\n        path: \"actions/\".concat(agent_id),\n    }), body);\n};\nexport var deleteAgentAction = function (_a) {\n    var agent_id = _a.agent_id, action_id = _a.action_id;\n    return __awaiter(void 0, void 0, void 0, function () {\n        return __generator(this, function (_b) {\n            return [2 /*return*/, request.delete(endpoints.agents({\n                    path: \"actions/\".concat(agent_id, \"/\").concat(action_id),\n                }))];\n        });\n    });\n};\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport var importConversationsFile = function (data) {\n    return request.postMultiPart(endpoints.importConversation(), data);\n};\nexport var uploadAvatar = function (data) {\n    return request.postMultiPart(endpoints.avatar(), data);\n};\nexport var uploadAssistantAvatar = function (data) {\n    return request.postMultiPart(endpoints.assistants({\n        isAvatar: true,\n        path: \"\".concat(data.assistant_id, \"/avatar\"),\n        options: { model: data.model, endpoint: data.endpoint },\n        version: data.version,\n    }), data.formData);\n};\nexport var uploadAgentAvatar = function (data) {\n    return request.postMultiPart(\"\".concat(endpoints.images(), \"/agents/\").concat(data.agent_id, \"/avatar\"), data.formData);\n};\nexport var getFileDownload = function (userId, file_id) { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2 /*return*/, request.getResponse(\"\".concat(endpoints.files(), \"/download/\").concat(userId, \"/\").concat(file_id), {\n                responseType: 'blob',\n                headers: {\n                    Accept: 'application/octet-stream',\n                },\n            })];\n    });\n}); };\nexport var getCodeOutputDownload = function (url) { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2 /*return*/, request.getResponse(url, {\n                responseType: 'blob',\n                headers: {\n                    Accept: 'application/octet-stream',\n                },\n            })];\n    });\n}); };\nexport var deleteFiles = function (payload) { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2 /*return*/, request.deleteWithOptions(endpoints.files(), {\n                data: payload,\n            })];\n    });\n}); };\n/* Speech */\nexport var speechToText = function (data) {\n    return request.postMultiPart(endpoints.speechToText(), data);\n};\nexport var textToSpeech = function (data) {\n    return request.postTTS(endpoints.textToSpeechManual(), data);\n};\nexport var getVoices = function () {\n    return request.get(endpoints.textToSpeechVoices());\n};\nexport var getCustomConfigSpeech = function () {\n    return request.get(endpoints.getCustomConfigSpeech());\n};\n/* conversations */\nexport function duplicateConversation(payload) {\n    return request.post(endpoints.duplicateConversation(), payload);\n}\nexport function forkConversation(payload) {\n    return request.post(endpoints.forkConversation(), payload);\n}\nexport function deleteConversation(payload) {\n    //todo: this should be a DELETE request\n    return request.post(endpoints.deleteConversation(), { arg: payload });\n}\nexport function clearAllConversations() {\n    return request.post(endpoints.deleteConversation(), { arg: {} });\n}\nexport var listConversations = function (params) {\n    var _a, _b;\n    // Assuming params has a pageNumber property\n    var pageNumber = ((_a = params === null || params === void 0 ? void 0 : params.pageNumber) !== null && _a !== void 0 ? _a : '1') || '1'; // Default to page 1 if not provided\n    var isArchived = (_b = params === null || params === void 0 ? void 0 : params.isArchived) !== null && _b !== void 0 ? _b : false; // Default to false if not provided\n    var tags = (params === null || params === void 0 ? void 0 : params.tags) || []; // Default to an empty array if not provided\n    return request.get(endpoints.conversations(pageNumber, isArchived, tags));\n};\nexport var listConversationsByQuery = function (params) {\n    var _a, _b;\n    var pageNumber = ((_a = params === null || params === void 0 ? void 0 : params.pageNumber) !== null && _a !== void 0 ? _a : '1') || '1'; // Default to page 1 if not provided\n    var searchQuery = (_b = params === null || params === void 0 ? void 0 : params.searchQuery) !== null && _b !== void 0 ? _b : ''; // If no search query is provided, default to an empty string\n    // Update the endpoint to handle a search query\n    if (searchQuery !== '') {\n        return request.get(endpoints.search(searchQuery, pageNumber));\n    }\n    else {\n        return request.get(endpoints.conversations(pageNumber));\n    }\n};\nexport var searchConversations = function (q, pageNumber) { return __awaiter(void 0, void 0, void 0, function () {\n    return __generator(this, function (_a) {\n        return [2 /*return*/, request.get(endpoints.search(q, pageNumber))];\n    });\n}); };\nexport function getConversations(pageNumber) {\n    return request.get(endpoints.conversations(pageNumber));\n}\nexport function getConversationById(id) {\n    return request.get(endpoints.conversationById(id));\n}\nexport function updateConversation(payload) {\n    return request.post(endpoints.updateConversation(), { arg: payload });\n}\nexport function archiveConversation(payload) {\n    return request.post(endpoints.updateConversation(), { arg: payload });\n}\nexport function genTitle(payload) {\n    return request.post(endpoints.genTitle(), payload);\n}\nexport function getPrompt(id) {\n    return request.get(endpoints.getPrompt(id));\n}\nexport function getPrompts(filter) {\n    return request.get(endpoints.getPromptsWithFilters(filter));\n}\nexport function getAllPromptGroups() {\n    return request.get(endpoints.getAllPromptGroups());\n}\nexport function getPromptGroups(filter) {\n    return request.get(endpoints.getPromptGroupsWithFilters(filter));\n}\nexport function getPromptGroup(id) {\n    return request.get(endpoints.getPromptGroup(id));\n}\nexport function createPrompt(payload) {\n    return request.post(endpoints.postPrompt(), payload);\n}\nexport function updatePromptGroup(variables) {\n    return request.patch(endpoints.updatePromptGroup(variables.id), variables.payload);\n}\nexport function deletePrompt(payload) {\n    return request.delete(endpoints.deletePrompt(payload));\n}\nexport function makePromptProduction(id) {\n    return request.patch(endpoints.updatePromptTag(id));\n}\nexport function updatePromptLabels(variables) {\n    return request.patch(endpoints.updatePromptLabels(variables.id), variables.payload);\n}\nexport function deletePromptGroup(id) {\n    return request.delete(endpoints.deletePromptGroup(id));\n}\nexport function getCategories() {\n    return request.get(endpoints.getCategories());\n}\nexport function getRandomPrompts(variables) {\n    return request.get(endpoints.getRandomPrompts(variables.limit, variables.skip));\n}\n/* Roles */\nexport function getRole(roleName) {\n    return request.get(endpoints.getRole(roleName));\n}\nexport function updatePromptPermissions(variables) {\n    return request.put(endpoints.updatePromptPermissions(variables.roleName), variables.updates);\n}\nexport function updateAgentPermissions(variables) {\n    return request.put(endpoints.updateAgentPermissions(variables.roleName), variables.updates);\n}\n/* Tags */\nexport function getConversationTags() {\n    return request.get(endpoints.conversationTags());\n}\nexport function createConversationTag(payload) {\n    return request.post(endpoints.conversationTags(), payload);\n}\nexport function updateConversationTag(tag, payload) {\n    return request.put(endpoints.conversationTags(tag), payload);\n}\nexport function deleteConversationTag(tag) {\n    return request.delete(endpoints.conversationTags(tag));\n}\nexport function addTagToConversation(conversationId, payload) {\n    return request.put(endpoints.addTagToConversation(conversationId), payload);\n}\nexport function rebuildConversationTags() {\n    return request.post(endpoints.conversationTags('rebuild'));\n}\nexport function healthCheck() {\n    return request.get(endpoints.health());\n}\nexport function getUserTerms() {\n    return request.get(endpoints.userTerms());\n}\nexport function acceptTerms() {\n    return request.post(endpoints.acceptUserTerms());\n}\nexport function getBanner() {\n    return request.get(endpoints.banner());\n}\n//# sourceMappingURL=data-service.js.map","references":["/Users/romanzarvirov/aibuddy/LibreChat/node_modules/axios/index.d.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/api-endpoints.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types/assistants.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types/mutations.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types/queries.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types/files.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/config.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/request.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/schemas.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/roles.ts"],"map":"{\"version\":3,\"file\":\"data-service.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/data-service.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/dist/types/data-service.d.ts","writeByteOrderMark":false,"text":"import type { AxiosResponse } from 'axios';\nimport type * as t from './types';\nimport * as a from './types/assistants';\nimport * as m from './types/mutations';\nimport * as q from './types/queries';\nimport * as f from './types/files';\nimport * as config from './config';\nimport * as s from './schemas';\nimport * as r from './roles';\nexport declare function abortRequestWithMessage(endpoint: string, abortKey: string, message: string): Promise<void>;\nexport declare function revokeUserKey(name: string): Promise<unknown>;\nexport declare function revokeAllUserKeys(): Promise<unknown>;\nexport declare function deleteUser(): Promise<s.TPreset>;\nexport declare function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]>;\nexport declare function getSharedMessages(shareId: string): Promise<t.TSharedMessagesResponse>;\nexport declare const listSharedLinks: (params: q.SharedLinksListParams) => Promise<q.SharedLinksResponse>;\nexport declare function getSharedLink(conversationId: string): Promise<t.TSharedLinkGetResponse>;\nexport declare function createSharedLink(conversationId: string): Promise<t.TSharedLinkResponse>;\nexport declare function updateSharedLink(shareId: string): Promise<t.TSharedLinkResponse>;\nexport declare function deleteSharedLink(shareId: string): Promise<m.TDeleteSharedLinkResponse>;\nexport declare function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown>;\nexport declare function updateMessageContent(payload: t.TUpdateMessageContent): Promise<unknown>;\nexport declare function updateUserKey(payload: t.TUpdateUserKeyRequest): Promise<any>;\nexport declare function getPresets(): Promise<s.TPreset[]>;\nexport declare function createPreset(payload: s.TPreset): Promise<s.TPreset>;\nexport declare function updatePreset(payload: s.TPreset): Promise<s.TPreset>;\nexport declare function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse>;\nexport declare function getSearchEnabled(): Promise<boolean>;\nexport declare function getUser(): Promise<t.TUser>;\nexport declare function getUserBalance(): Promise<string>;\nexport declare const updateTokenCount: (text: string) => Promise<any>;\nexport declare const login: (payload: t.TLoginUser) => Promise<any>;\nexport declare const logout: () => Promise<any>;\nexport declare const register: (payload: t.TRegisterUser) => Promise<any>;\nexport declare const userKeyQuery: (name: string) => Promise<t.TCheckUserKeyResponse>;\nexport declare const getLoginGoogle: () => Promise<unknown>;\nexport declare const requestPasswordReset: (payload: t.TRequestPasswordReset) => Promise<t.TRequestPasswordResetResponse>;\nexport declare const resetPassword: (payload: t.TResetPassword) => Promise<any>;\nexport declare const verifyEmail: (payload: t.TVerifyEmail) => Promise<t.VerifyEmailResponse>;\nexport declare const resendVerificationEmail: (payload: t.TResendVerificationEmail) => Promise<t.VerifyEmailResponse>;\nexport declare const getAvailablePlugins: () => Promise<s.TPlugin[]>;\nexport declare const updateUserPlugins: (payload: t.TUpdateUserPlugins) => Promise<any>;\nexport declare const getStartupConfig: () => Promise<config.TStartupConfig>;\nexport declare const getAIEndpoints: () => Promise<t.TEndpointsConfig>;\nexport declare const getModels: () => Promise<t.TModelsConfig>;\nexport declare const getEndpointsConfigOverride: () => Promise<unknown | boolean>;\nexport declare const createAssistant: ({ version, ...data }: a.AssistantCreateParams) => Promise<a.Assistant>;\nexport declare const getAssistantById: ({ endpoint, assistant_id, version, }: {\n    endpoint: s.AssistantsEndpoint;\n    assistant_id: string;\n    version: number | string | number;\n}) => Promise<a.Assistant>;\nexport declare const updateAssistant: ({ assistant_id, data, version, }: {\n    assistant_id: string;\n    data: a.AssistantUpdateParams;\n    version: number | string;\n}) => Promise<a.Assistant>;\nexport declare const deleteAssistant: ({ assistant_id, model, endpoint, version, }: m.DeleteAssistantBody & {\n    version: number | string;\n}) => Promise<void>;\nexport declare const listAssistants: (params: a.AssistantListParams, version: number | string) => Promise<a.AssistantListResponse>;\nexport declare function getAssistantDocs({ endpoint, version, }: {\n    endpoint: s.AssistantsEndpoint | string;\n    version: number | string;\n}): Promise<a.AssistantDocument[]>;\nexport declare const getAvailableTools: (_endpoint: s.AssistantsEndpoint | s.EModelEndpoint.agents, version?: number | string) => Promise<s.TPlugin[]>;\nexport declare const getVerifyAgentToolAuth: (params: q.VerifyToolAuthParams) => Promise<q.VerifyToolAuthResponse>;\nexport declare const callTool: <T extends a.Tools.execute_code>({ toolId, toolParams, }: {\n    toolId: T;\n    toolParams: m.ToolParams<T>;\n}) => Promise<m.ToolCallResponse>;\nexport declare const getToolCalls: (params: q.GetToolCallParams) => Promise<q.ToolCallResults>;\nexport declare const getFiles: () => Promise<f.TFile[]>;\nexport declare const getFileConfig: () => Promise<f.FileConfig>;\nexport declare const uploadImage: (data: FormData, signal?: AbortSignal | null) => Promise<f.TFileUpload>;\nexport declare const uploadFile: (data: FormData, signal?: AbortSignal | null) => Promise<f.TFileUpload>;\nexport declare const updateAction: (data: m.UpdateActionVariables) => Promise<m.UpdateActionResponse>;\nexport declare function getActions(): Promise<a.Action[]>;\nexport declare const deleteAction: ({ assistant_id, action_id, model, version, endpoint, }: m.DeleteActionVariables & {\n    version: number | string;\n}) => Promise<void>;\n/**\n * Agents\n */\nexport declare const createAgent: ({ ...data }: a.AgentCreateParams) => Promise<a.Agent>;\nexport declare const getAgentById: ({ agent_id }: {\n    agent_id: string;\n}) => Promise<a.Agent>;\nexport declare const updateAgent: ({ agent_id, data, }: {\n    agent_id: string;\n    data: a.AgentUpdateParams;\n}) => Promise<a.Agent>;\nexport declare const duplicateAgent: ({ agent_id, }: m.DuplicateAgentBody) => Promise<{\n    agent: a.Agent;\n    actions: a.Action[];\n}>;\nexport declare const deleteAgent: ({ agent_id }: m.DeleteAgentBody) => Promise<void>;\nexport declare const listAgents: (params: a.AgentListParams) => Promise<a.AgentListResponse>;\nexport declare const getAvailableAgentTools: () => Promise<s.TPlugin[]>;\nexport declare const updateAgentAction: (data: m.UpdateAgentActionVariables) => Promise<m.UpdateAgentActionResponse>;\nexport declare const deleteAgentAction: ({ agent_id, action_id, }: m.DeleteAgentActionVariables) => Promise<void>;\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport declare const importConversationsFile: (data: FormData) => Promise<t.TImportResponse>;\nexport declare const uploadAvatar: (data: FormData) => Promise<f.AvatarUploadResponse>;\nexport declare const uploadAssistantAvatar: (data: m.AssistantAvatarVariables) => Promise<a.Assistant>;\nexport declare const uploadAgentAvatar: (data: m.AgentAvatarVariables) => Promise<a.Agent>;\nexport declare const getFileDownload: (userId: string, file_id: string) => Promise<AxiosResponse>;\nexport declare const getCodeOutputDownload: (url: string) => Promise<AxiosResponse>;\nexport declare const deleteFiles: (payload: {\n    files: f.BatchFile[];\n    agent_id?: string;\n    assistant_id?: string;\n    tool_resource?: a.EToolResources;\n}) => Promise<f.DeleteFilesResponse>;\nexport declare const speechToText: (data: FormData) => Promise<f.SpeechToTextResponse>;\nexport declare const textToSpeech: (data: FormData) => Promise<ArrayBuffer>;\nexport declare const getVoices: () => Promise<f.VoiceResponse>;\nexport declare const getCustomConfigSpeech: () => Promise<t.TCustomConfigSpeechResponse>;\nexport declare function duplicateConversation(payload: t.TDuplicateConvoRequest): Promise<t.TDuplicateConvoResponse>;\nexport declare function forkConversation(payload: t.TForkConvoRequest): Promise<t.TForkConvoResponse>;\nexport declare function deleteConversation(payload: t.TDeleteConversationRequest): Promise<any>;\nexport declare function clearAllConversations(): Promise<unknown>;\nexport declare const listConversations: (params?: q.ConversationListParams) => Promise<q.ConversationListResponse>;\nexport declare const listConversationsByQuery: (params?: (q.ConversationListParams & {\n    searchQuery?: string | undefined;\n}) | undefined) => Promise<q.ConversationListResponse>;\nexport declare const searchConversations: (q: string, pageNumber: string) => Promise<t.TSearchResults>;\nexport declare function getConversations(pageNumber: string): Promise<t.TGetConversationsResponse>;\nexport declare function getConversationById(id: string): Promise<s.TConversation>;\nexport declare function updateConversation(payload: t.TUpdateConversationRequest): Promise<t.TUpdateConversationResponse>;\nexport declare function archiveConversation(payload: t.TArchiveConversationRequest): Promise<t.TArchiveConversationResponse>;\nexport declare function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse>;\nexport declare function getPrompt(id: string): Promise<{\n    prompt: t.TPrompt;\n}>;\nexport declare function getPrompts(filter: t.TPromptsWithFilterRequest): Promise<t.TPrompt[]>;\nexport declare function getAllPromptGroups(): Promise<q.AllPromptGroupsResponse>;\nexport declare function getPromptGroups(filter: t.TPromptGroupsWithFilterRequest): Promise<t.PromptGroupListResponse>;\nexport declare function getPromptGroup(id: string): Promise<t.TPromptGroup>;\nexport declare function createPrompt(payload: t.TCreatePrompt): Promise<t.TCreatePromptResponse>;\nexport declare function updatePromptGroup(variables: t.TUpdatePromptGroupVariables): Promise<t.TUpdatePromptGroupResponse>;\nexport declare function deletePrompt(payload: t.TDeletePromptVariables): Promise<t.TDeletePromptResponse>;\nexport declare function makePromptProduction(id: string): Promise<t.TMakePromptProductionResponse>;\nexport declare function updatePromptLabels(variables: t.TUpdatePromptLabelsRequest): Promise<t.TUpdatePromptLabelsResponse>;\nexport declare function deletePromptGroup(id: string): Promise<t.TDeletePromptGroupResponse>;\nexport declare function getCategories(): Promise<t.TGetCategoriesResponse>;\nexport declare function getRandomPrompts(variables: t.TGetRandomPromptsRequest): Promise<t.TGetRandomPromptsResponse>;\nexport declare function getRole(roleName: string): Promise<r.TRole>;\nexport declare function updatePromptPermissions(variables: m.UpdatePromptPermVars): Promise<m.UpdatePermResponse>;\nexport declare function updateAgentPermissions(variables: m.UpdateAgentPermVars): Promise<m.UpdatePermResponse>;\nexport declare function getConversationTags(): Promise<t.TConversationTagsResponse>;\nexport declare function createConversationTag(payload: t.TConversationTagRequest): Promise<t.TConversationTagResponse>;\nexport declare function updateConversationTag(tag: string, payload: t.TConversationTagRequest): Promise<t.TConversationTagResponse>;\nexport declare function deleteConversationTag(tag: string): Promise<t.TConversationTagResponse>;\nexport declare function addTagToConversation(conversationId: string, payload: t.TTagConversationRequest): Promise<t.TTagConversationResponse>;\nexport declare function rebuildConversationTags(): Promise<t.TConversationTagsResponse>;\nexport declare function healthCheck(): Promise<string>;\nexport declare function getUserTerms(): Promise<t.TUserTermsResponse>;\nexport declare function acceptTerms(): Promise<t.TAcceptTermsResponse>;\nexport declare function getBanner(): Promise<t.TBannerResponse>;\n"}}
