{"code":"var _a, _b;\nimport { __assign } from \"tslib\";\nimport { ContentTypes } from './types/runs';\nimport { openAISchema, googleSchema, EModelEndpoint, anthropicSchema, assistantSchema, gptPluginsSchema, \n// agentsSchema,\ncompactAgentsSchema, compactGoogleSchema, compactChatGPTSchema, chatGPTBrowserSchema, compactPluginsSchema, compactAssistantSchema, } from './schemas';\nimport { bedrockInputSchema } from './bedrock';\nimport { alternateName } from './config';\nvar endpointSchemas = (_a = {},\n    _a[EModelEndpoint.openAI] = openAISchema,\n    _a[EModelEndpoint.azureOpenAI] = openAISchema,\n    _a[EModelEndpoint.custom] = openAISchema,\n    _a[EModelEndpoint.google] = googleSchema,\n    _a[EModelEndpoint.anthropic] = anthropicSchema,\n    _a[EModelEndpoint.chatGPTBrowser] = chatGPTBrowserSchema,\n    _a[EModelEndpoint.gptPlugins] = gptPluginsSchema,\n    _a[EModelEndpoint.assistants] = assistantSchema,\n    _a[EModelEndpoint.azureAssistants] = assistantSchema,\n    _a[EModelEndpoint.agents] = compactAgentsSchema,\n    _a[EModelEndpoint.bedrock] = bedrockInputSchema,\n    _a);\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport function getEnabledEndpoints() {\n    var _a;\n    var defaultEndpoints = [\n        EModelEndpoint.openAI,\n        EModelEndpoint.agents,\n        EModelEndpoint.assistants,\n        EModelEndpoint.azureAssistants,\n        EModelEndpoint.azureOpenAI,\n        EModelEndpoint.google,\n        EModelEndpoint.chatGPTBrowser,\n        EModelEndpoint.gptPlugins,\n        EModelEndpoint.anthropic,\n        EModelEndpoint.bedrock,\n    ];\n    var endpointsEnv = (_a = process.env.ENDPOINTS) !== null && _a !== void 0 ? _a : '';\n    var enabledEndpoints = defaultEndpoints;\n    if (endpointsEnv) {\n        enabledEndpoints = endpointsEnv\n            .split(',')\n            .filter(function (endpoint) { return endpoint.trim(); })\n            .map(function (endpoint) { return endpoint.trim(); });\n    }\n    return enabledEndpoints;\n}\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport function orderEndpointsConfig(endpointsConfig) {\n    if (!endpointsConfig) {\n        return {};\n    }\n    var enabledEndpoints = getEnabledEndpoints();\n    var endpointKeys = Object.keys(endpointsConfig);\n    var defaultCustomIndex = enabledEndpoints.indexOf(EModelEndpoint.custom);\n    return endpointKeys.reduce(function (accumulatedConfig, currentEndpointKey) {\n        var isCustom = !(currentEndpointKey in EModelEndpoint);\n        var isEnabled = enabledEndpoints.includes(currentEndpointKey);\n        if (!isEnabled && !isCustom) {\n            return accumulatedConfig;\n        }\n        var index = enabledEndpoints.indexOf(currentEndpointKey);\n        if (isCustom) {\n            accumulatedConfig[currentEndpointKey] = __assign({ order: defaultCustomIndex >= 0 ? defaultCustomIndex : 9999 }, endpointsConfig[currentEndpointKey]);\n        }\n        else if (endpointsConfig[currentEndpointKey]) {\n            accumulatedConfig[currentEndpointKey] = __assign(__assign({}, endpointsConfig[currentEndpointKey]), { order: index });\n        }\n        return accumulatedConfig;\n    }, {});\n}\n/** Converts an array of Zod issues into a string. */\nexport function errorsToString(errors) {\n    return errors\n        .map(function (error) {\n        var field = error.path.join('.');\n        var message = error.message;\n        return \"\".concat(field, \": \").concat(message);\n    })\n        .join(' ');\n}\nexport var envVarRegex = /^\\${(.+)}$/;\n/** Extracts the value of an environment variable from a string. */\nexport function extractEnvVariable(value) {\n    var envVarMatch = value.match(envVarRegex);\n    if (envVarMatch) {\n        // eslint-disable-next-line @typescript-eslint/strict-boolean-expressions\n        return process.env[envVarMatch[1]] || value;\n    }\n    return value;\n}\n/** Resolves header values to env variables if detected */\nexport function resolveHeaders(headers) {\n    var resolvedHeaders = __assign({}, (headers !== null && headers !== void 0 ? headers : {}));\n    if (headers && typeof headers === 'object' && !Array.isArray(headers)) {\n        Object.keys(headers).forEach(function (key) {\n            resolvedHeaders[key] = extractEnvVariable(headers[key]);\n        });\n    }\n    return resolvedHeaders;\n}\nexport function getFirstDefinedValue(possibleValues) {\n    var returnValue;\n    for (var _i = 0, possibleValues_1 = possibleValues; _i < possibleValues_1.length; _i++) {\n        var value = possibleValues_1[_i];\n        if (value) {\n            returnValue = value;\n            break;\n        }\n    }\n    return returnValue;\n}\nexport function getNonEmptyValue(possibleValues) {\n    for (var _i = 0, possibleValues_2 = possibleValues; _i < possibleValues_2.length; _i++) {\n        var value = possibleValues_2[_i];\n        if (value && value.trim() !== '') {\n            return value;\n        }\n    }\n    return undefined;\n}\nexport var parseConvo = function (_a) {\n    var _b, _c;\n    var endpoint = _a.endpoint, endpointType = _a.endpointType, conversation = _a.conversation, possibleValues = _a.possibleValues;\n    var schema = endpointSchemas[endpoint];\n    if (!schema && !endpointType) {\n        throw new Error(\"Unknown endpoint: \".concat(endpoint));\n    }\n    else if (!schema && endpointType) {\n        schema = endpointSchemas[endpointType];\n    }\n    // if (defaultSchema && schemaCreators[endpoint]) {\n    //   schema = schemaCreators[endpoint](defaultSchema);\n    // }\n    var convo = schema === null || schema === void 0 ? void 0 : schema.parse(conversation);\n    var _d = possibleValues !== null && possibleValues !== void 0 ? possibleValues : {}, models = _d.models, secondaryModels = _d.secondaryModels;\n    if (models && convo) {\n        convo.model = (_b = getFirstDefinedValue(models)) !== null && _b !== void 0 ? _b : convo.model;\n    }\n    if (secondaryModels && (convo === null || convo === void 0 ? void 0 : convo.agentOptions)) {\n        convo.agentOptions.model = (_c = getFirstDefinedValue(secondaryModels)) !== null && _c !== void 0 ? _c : convo.agentOptions.model;\n    }\n    return convo;\n};\nexport var getResponseSender = function (endpointOption) {\n    var _a;\n    var _m = endpointOption.model, endpoint = endpointOption.endpoint, endpointType = endpointOption.endpointType, _mdl = endpointOption.modelDisplayLabel, _cgl = endpointOption.chatGptLabel, _ml = endpointOption.modelLabel;\n    var model = _m !== null && _m !== void 0 ? _m : '';\n    var modelDisplayLabel = _mdl !== null && _mdl !== void 0 ? _mdl : '';\n    var chatGptLabel = _cgl !== null && _cgl !== void 0 ? _cgl : '';\n    var modelLabel = _ml !== null && _ml !== void 0 ? _ml : '';\n    if ([\n        EModelEndpoint.openAI,\n        EModelEndpoint.bedrock,\n        EModelEndpoint.gptPlugins,\n        EModelEndpoint.azureOpenAI,\n        EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)) {\n        if (chatGptLabel) {\n            return chatGptLabel;\n        }\n        else if (modelLabel) {\n            return modelLabel;\n        }\n        else if (model && /\\bo1\\b/i.test(model)) {\n            return 'o1';\n        }\n        else if (model && /\\bo3\\b/i.test(model)) {\n            return 'o3';\n        }\n        else if (model && model.includes('gpt-3')) {\n            return 'GPT-3.5';\n        }\n        else if (model && model.includes('gpt-4o')) {\n            return 'GPT-4o';\n        }\n        else if (model && model.includes('gpt-4')) {\n            return 'GPT-4';\n        }\n        else if (model && model.includes('mistral')) {\n            return 'Mistral';\n        }\n        return (_a = alternateName[endpoint]) !== null && _a !== void 0 ? _a : 'ChatGPT';\n    }\n    if (endpoint === EModelEndpoint.anthropic) {\n        return modelLabel || 'Claude';\n    }\n    if (endpoint === EModelEndpoint.bedrock) {\n        return modelLabel || alternateName[endpoint];\n    }\n    if (endpoint === EModelEndpoint.google) {\n        if (modelLabel) {\n            return modelLabel;\n        }\n        else if (model && (model.includes('gemini') || model.includes('learnlm'))) {\n            return 'Gemini';\n        }\n        else if (model && model.includes('code')) {\n            return 'Codey';\n        }\n        return 'PaLM2';\n    }\n    if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n        if (modelLabel) {\n            return modelLabel;\n        }\n        else if (chatGptLabel) {\n            return chatGptLabel;\n        }\n        else if (model && model.includes('mistral')) {\n            return 'Mistral';\n        }\n        else if (model && model.includes('gpt-3')) {\n            return 'GPT-3.5';\n        }\n        else if (model && model.includes('gpt-4o')) {\n            return 'GPT-4o';\n        }\n        else if (model && model.includes('gpt-4')) {\n            return 'GPT-4';\n        }\n        else if (modelDisplayLabel) {\n            return modelDisplayLabel;\n        }\n        return 'AI';\n    }\n    return '';\n};\nvar compactEndpointSchemas = (_b = {},\n    _b[EModelEndpoint.openAI] = openAISchema,\n    _b[EModelEndpoint.azureOpenAI] = openAISchema,\n    _b[EModelEndpoint.custom] = openAISchema,\n    _b[EModelEndpoint.assistants] = compactAssistantSchema,\n    _b[EModelEndpoint.azureAssistants] = compactAssistantSchema,\n    _b[EModelEndpoint.agents] = compactAgentsSchema,\n    _b[EModelEndpoint.google] = compactGoogleSchema,\n    _b[EModelEndpoint.bedrock] = bedrockInputSchema,\n    _b[EModelEndpoint.anthropic] = anthropicSchema,\n    _b[EModelEndpoint.chatGPTBrowser] = compactChatGPTSchema,\n    _b[EModelEndpoint.gptPlugins] = compactPluginsSchema,\n    _b);\nexport var parseCompactConvo = function (_a) {\n    var _b;\n    var endpoint = _a.endpoint, endpointType = _a.endpointType, conversation = _a.conversation, possibleValues = _a.possibleValues;\n    if (!endpoint) {\n        throw new Error(\"undefined endpoint: \".concat(endpoint));\n    }\n    var schema = compactEndpointSchemas[endpoint];\n    if (!schema && !endpointType) {\n        throw new Error(\"Unknown endpoint: \".concat(endpoint));\n    }\n    else if (!schema && endpointType) {\n        schema = compactEndpointSchemas[endpointType];\n    }\n    if (!schema) {\n        throw new Error(\"Unknown endpointType: \".concat(endpointType));\n    }\n    var convo = schema.parse(conversation);\n    // const { models, secondaryModels } = possibleValues ?? {};\n    var models = (possibleValues !== null && possibleValues !== void 0 ? possibleValues : {}).models;\n    if (models && convo) {\n        convo.model = (_b = getFirstDefinedValue(models)) !== null && _b !== void 0 ? _b : convo.model;\n    }\n    // if (secondaryModels && convo.agentOptions) {\n    //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n    // }\n    return convo;\n};\nexport function parseTextParts(contentParts) {\n    var result = '';\n    for (var _i = 0, contentParts_1 = contentParts; _i < contentParts_1.length; _i++) {\n        var part = contentParts_1[_i];\n        if (part.type === ContentTypes.TEXT) {\n            var textValue = typeof part.text === 'string' ? part.text : part.text.value;\n            if (result.length > 0 &&\n                textValue.length > 0 &&\n                result[result.length - 1] !== ' ' &&\n                textValue[0] !== ' ') {\n                result += ' ';\n            }\n            result += textValue;\n        }\n    }\n    return result;\n}\nexport var SEPARATORS = ['.', '?', '!', '۔', '。', '‥', ';', '¡', '¿', '\\n', '```'];\nexport function findLastSeparatorIndex(text, separators) {\n    if (separators === void 0) { separators = SEPARATORS; }\n    var lastIndex = -1;\n    for (var _i = 0, separators_1 = separators; _i < separators_1.length; _i++) {\n        var separator = separators_1[_i];\n        var index = text.lastIndexOf(separator);\n        if (index > lastIndex) {\n            lastIndex = index;\n        }\n    }\n    return lastIndex;\n}\n//# sourceMappingURL=parsers.js.map","references":["/Users/romanzarvirov/aibuddy/LibreChat/node_modules/zod/index.d.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types/assistants.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/schemas.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types/runs.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/schemas.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/bedrock.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/config.ts"],"map":"{\"version\":3,\"file\":\"parsers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/parsers.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/dist/types/parsers.d.ts","writeByteOrderMark":false,"text":"import type { ZodIssue } from 'zod';\nimport type * as a from './types/assistants';\nimport type * as s from './schemas';\nimport type * as t from './types';\nimport { EModelEndpoint } from './schemas';\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport declare function getEnabledEndpoints(): string[];\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport declare function orderEndpointsConfig(endpointsConfig: t.TEndpointsConfig): Record<string, t.TConfig | null | undefined>;\n/** Converts an array of Zod issues into a string. */\nexport declare function errorsToString(errors: ZodIssue[]): string;\nexport declare const envVarRegex: RegExp;\n/** Extracts the value of an environment variable from a string. */\nexport declare function extractEnvVariable(value: string): string;\n/** Resolves header values to env variables if detected */\nexport declare function resolveHeaders(headers: Record<string, string> | undefined): {\n    [x: string]: string;\n};\nexport declare function getFirstDefinedValue(possibleValues: string[]): string | undefined;\nexport declare function getNonEmptyValue(possibleValues: string[]): string | undefined;\nexport type TPossibleValues = {\n    models: string[];\n    secondaryModels?: string[];\n};\nexport declare const parseConvo: ({ endpoint, endpointType, conversation, possibleValues, }: {\n    endpoint: EModelEndpoint;\n    endpointType?: s.EModelEndpoint | null | undefined;\n    conversation: Partial<s.TConversation | s.TPreset> | null;\n    possibleValues?: TPossibleValues | undefined;\n}) => s.TConversation | undefined;\nexport declare const getResponseSender: (endpointOption: t.TEndpointOption) => string;\nexport declare const parseCompactConvo: ({ endpoint, endpointType, conversation, possibleValues, }: {\n    endpoint?: s.EModelEndpoint | undefined;\n    endpointType?: s.EModelEndpoint | null | undefined;\n    conversation: Partial<s.TConversation | s.TPreset>;\n    possibleValues?: TPossibleValues | undefined;\n}) => s.TConversation | null;\nexport declare function parseTextParts(contentParts: a.TMessageContentParts[]): string;\nexport declare const SEPARATORS: string[];\nexport declare function findLastSeparatorIndex(text: string, separators?: string[]): number;\n"}}
