{"code":"import { __assign } from \"tslib\";\nimport { EndpointURLs } from './config';\nimport * as s from './schemas';\nexport default function createPayload(submission) {\n    var conversation = submission.conversation, userMessage = submission.userMessage, endpointOption = submission.endpointOption, isEdited = submission.isEdited, isContinued = submission.isContinued, isTemporary = submission.isTemporary;\n    var conversationId = s.tConvoUpdateSchema.parse(conversation).conversationId;\n    var _a = endpointOption, endpoint = _a.endpoint, endpointType = _a.endpointType;\n    var server = EndpointURLs[endpointType !== null && endpointType !== void 0 ? endpointType : endpoint];\n    if (isEdited && s.isAssistantsEndpoint(endpoint)) {\n        server += '/modify';\n    }\n    else if (isEdited) {\n        server = server.replace('/ask/', '/edit/');\n    }\n    var payload = __assign(__assign(__assign({}, userMessage), endpointOption), { isContinued: !!(isEdited && isContinued), conversationId: conversationId, isTemporary: isTemporary });\n    return { server: server, payload: payload };\n}\n//# sourceMappingURL=createPayload.js.map","references":["/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/types.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/config.ts","/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/src/schemas.ts"],"map":"{\"version\":3,\"file\":\"createPayload.js\",\"sourceRoot\":\"\",\"sources\":[\"../../src/createPayload.ts\"],\"names\":[],\"mappings\":\";AACA,OAAO,EAAE,YAAY,EAAE,MAAM,UAAU,CAAC;AACxC,OAAO,KAAK,CAAC,MAAM,WAAW,CAAC;AAE/B,MAAM,CAAC,OAAO,UAAU,aAAa,CAAC,UAAyB;IACrD,IAAA,YAAY,GAClB,UAAU,aADQ,EAAE,WAAW,GAC/B,UAAU,YADqB,EAAE,cAAc,GAC/C,UAAU,eADqC,EAAE,QAAQ,GACzD,UAAU,SAD+C,EAAE,WAAW,GACtE,UAAU,YAD4D,EAAE,WAAW,GACnF,UAAU,YADyE,CACxE;IACL,IAAA,cAAc,GAAK,CAAC,CAAC,kBAAkB,CAAC,KAAK,CAAC,YAAY,CAAC,eAA7C,CAA8C;IAC9D,IAAA,KAA6B,cAGlC,EAHO,QAAQ,cAAA,EAAE,YAAY,kBAG7B,CAAC;IAEF,IAAI,MAAM,GAAG,YAAY,CAAC,YAAY,aAAZ,YAAY,cAAZ,YAAY,GAAI,QAAQ,CAAC,CAAC;IAEpD,IAAI,QAAQ,IAAI,CAAC,CAAC,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC;QACjD,MAAM,IAAI,SAAS,CAAC;IACtB,CAAC;SAAM,IAAI,QAAQ,EAAE,CAAC;QACpB,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IAC7C,CAAC;IAED,IAAM,OAAO,kCACR,WAAW,GACX,cAAc,KACjB,WAAW,EAAE,CAAC,CAAC,CAAC,QAAQ,IAAI,WAAW,CAAC,EACxC,cAAc,gBAAA,EACd,WAAW,aAAA,GACZ,CAAC;IAEF,OAAO,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,CAAC;AAC7B,CAAC\"}","dts":{"name":"/Users/romanzarvirov/aibuddy/LibreChat/packages/data-provider/dist/types/createPayload.d.ts","writeByteOrderMark":false,"text":"import type * as t from './types';\nexport default function createPayload(submission: t.TSubmission): {\n    server: string;\n    payload: t.TPayload;\n};\n"}}
